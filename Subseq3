/*GeeksForGeeks Question:  Given an array A of N integers, find any 3 elements in it such that A[i] < A[j] < A[k] and i < j < k.

Example 1:

Input:
N = 5
A[] = {1,2,1,1,3}
Output: 1
Explanation: a sub-sequence 1 2 3 exist.
Example 2:

Input:
N = 3
A[] = {1,1,3}
Output: 0
Explanation: no such sub-sequence exist.*/

class Solution {
    ArrayList<Integer> find3Numbers(ArrayList<Integer> arr, int n) {
        Stack<Integer> st=new Stack<>();
        ArrayList<Integer> ar=new ArrayList<>();
        for(int i=n-1;i>=0;i--){
            while(!st.isEmpty() && st.peek()<=arr.get(i)) st.pop();
            st.push(arr.get(i));
            if(st.size()==3) break;
        }
        if(st.size()==3){
            for(int i=2;i>=0;i--) ar.add(st.pop());
        }
        return ar;
}
}
